/**
* File name: index.js
* Author: HongMing
* Function: used to configure all involved route paths
*/


// Initialize express, router and controller classes
const express = require("express");
const router = express.Router();
const controller = require("../controller/file.controller");

// Configure all route paths
let routes = (app) => {
  // Handle the request of uploading tested Android app to the back-end
  router.post("/upload", controller.upload);
  // Handle the request of removing an Android app file from the back-end directory
  router.post("/remove", controller.remove);
  // Handle the request of starting a new testing task
  router.get("/add_new_task", controller.addNewTask);
  // Handle the request of updating a task's status
  router.post("/update_task", controller.updateTask);
  // Handle the request of getting the information of a tested Android app
  router.get("/get_app_info", controller.getAPKInfo);
  // Handle the request of getting the information of all test tasks
  router.get("/get_all_tasks", controller.findAllTasks);
  // Handle the request of deleting test tasks
  router.post("/delete_task", controller.deleteTasks);
  // Handle the request of getting the information of a user account
  router.get("/get_account", controller.getAccount);
  // Handle the request of saving the information of a user account
  router.post("/save_account", controller.saveAccount);
  //Handle the request of getting information of all Android devices
  router.get("/get_all_devices", controller.findAllDevices);
  // Handle the request of getting the result of a user's latest test task
  router.get("/get_recent_result", controller.findRecentTaskResult);
  // Handle the request of getting the result of a test task
  router.get("/get_recent_result_by_id", controller.findRecentTaskResultByTaskId);
  // Handle the request of getting the setting information
  router.get("/get_settings", controller.getSettings);
  // Handle the request of updating the setting information
  router.post("/save_settings", controller.saveSettings);
  // Handle the request of saving the information of a user profile's photo
  router.post("/update_photo", controller.updatePhoto);
  // Handle the request of getting the ranking list of Android apps' performance
  router.get("/get_perf_rankings", controller.getPerformanceRankings);
  // Handle the request of getting the ranking list of Android apps' stability
  router.get("/get_stat_rankings", controller.getStabilityRankings);
  // Handle the request of adding a test result generated by test scripts
  router.post("/insert_task_result", controller.insertTaskResult);
  // Handle the request of getting an idle Android device
  router.get("/find_idle_device", controller.findIdleDevice);
  // Handle the request of updating the status of an Android device
  router.post("/update_device_status", controller.updateDeviceStatus);
  // Handle the request of getting the usage count of all Android devices
  router.get("/get_device_stat", controller.getDeviceStat);
  // Handle the request of zipping and return test results to the front end
  router.get("/zip",controller.zipResult);
  app.use(router);
};

module.exports = routes;
